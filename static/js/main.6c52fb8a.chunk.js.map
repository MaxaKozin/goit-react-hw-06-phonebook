{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/InputForm/InputForm.js","components/Filter/Filter.js","components/Phonebook/PhonebookItem.js","components/Phonebook/Phonebook.js","components/Phonebook/Phonebook.container.js","components/Container/Container.js","App.js","index.js","components/InputForm/InputForm.module.css","components/Phonebook/Phonebook.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","actions","state","filter","contact","_","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","rootReducer","devTools","process","persistor","persistStore","InputForm","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","some","item","toLowerCase","alert","reset","this","className","s","form","label","htmlFor","type","onChange","input","placeholder","autoComplete","autoFocus","btn","Component","connect","dispatch","Filter","wrapper","defaultProps","target","PhonebookItem","onDelete","close","onClick","Phonebook","list","map","getVisibleContacts","normalizedFilter","includes","Container","title","children","section","heading","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6c52fb8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__1Tm7J\",\"heading\":\"Container_heading__2ErCF\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/addContact', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number\n  }\n}));\n\nconst deleteContact = createAction('contacts/deleteContact');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) => state.filter(contact => contact.id !== payload)\n})\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload\n})\n\nexport default combineReducers({\n  contacts: items,\n  filter\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  })\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter', '_persist']\n}\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, rootReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport actions from '../../redux/phonebook/phonebook-actions';\n\nimport s from './InputForm.module.css';\n\n\nclass InputForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  state = {\n    name: '',\n    number: ''\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const { contacts, onSubmit } = this.props;\n    if (contacts.some(item => item.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} Already exists`);\n      this.reset();\n      return;\n    }\n    onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' })\n  }\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor=\"name\">\n          Name\n          </label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={s.input}\n          name=\"name\"\n          value={name}\n          placeholder='Name'\n          autoComplete=\"off\"\n          autoFocus\n        />\n\n        <label className={s.label} htmlFor=\"number\">\n          Number\n          </label>\n        <input\n          id=\"number\"\n          type=\"text\"\n          onChange={this.handleChange}\n          className={s.input}\n          name=\"number\" value={number}\n          placeholder='Phone number'\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\" className={s.btn}>Add contact</button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) => dispatch(actions.addContact({ name, number }))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport actions from '../../redux/phonebook/phonebook-actions';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => (\n  <div className={s.wrapper}>\n    <label className={s.label}>\n      Find by Name\n    <input className={s.input} type=\"text\" value={filter} onChange={onChange} />\n    </label>\n  </div>\n);\nFilter.defaultProps = {\n  filter: ''\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ filter }) => ({\n  filter\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.changeFilter(event.target.value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Phonebook.module.css';\n\nconst PhonebookItem = ({ name, number, id, onDelete }) => {\n  return (\n    <li className={s.item}>\n      <span>{name} : {number}</span>\n      <button type=\"button\" className={s.close} onClick={() => onDelete(id)}>+</button>\n    </li>\n  );\n}\n\nPhonebookItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired\n}\n\nexport default PhonebookItem;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PhonebookItem from './PhonebookItem';\n\nimport s from './Phonebook.module.css';\n\nconst Phonebook = ({ contacts, onDelete }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact =>\n        <PhonebookItem {...contact} key={contact.id} onDelete={onDelete} />\n      )}\n    </ul>\n  )\n}\nPhonebook.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDelete: PropTypes.func.isRequired\n}\n\nexport default Phonebook;","import { connect } from 'react-redux';\n\nimport actions from '../../redux/phonebook/phonebook-actions';\nimport Phonebook from './Phonebook';\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  const filtered = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n  return filtered;\n\n};\n\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => {\n  return ({\n    contacts: getVisibleContacts(contacts, filter),\n  })\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(actions.deleteContact(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Container.module.css';\n\nconst Container = ({ title, children }) => (\n  <section className={s.section}>\n    {title &&\n      <h2 className={s.heading}>\n        {title}\n      </h2>\n    }\n    {children}\n  </section>\n)\nContainer.defaultProps = {\n  title: ''\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node]).isRequired\n}\n\nexport default Container;","import React from 'react';\n\nimport InputForm from './components/InputForm/InputForm';\nimport Filter from \"./components/Filter/Filter\";\nimport Phonebook from './components/Phonebook/Phonebook.container';\nimport Container from './components/Container/Container';\n\nconst App = () => (\n  <>\n    <Container title='Phonebook'>\n      <InputForm />\n    </Container>\n    <Container title='Contacts'>\n      <Filter />\n      <Phonebook />\n    </Container>\n  </>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './redux/store';\nimport App from './App';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__19Zkp\",\"label\":\"InputForm_label__ffqu2\",\"input\":\"InputForm_input__18_QU\",\"btn\":\"InputForm_btn__-Yutt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__uKNNQ\",\"item\":\"Phonebook_item__1FrRV\",\"close\":\"Phonebook_close__Ru4Oc\"};"],"sourceRoot":""}